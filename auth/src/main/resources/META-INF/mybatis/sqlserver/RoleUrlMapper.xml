<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.chenhao96.dao.RoleUrlMapper">

    <resultMap id="BaseResultMap" type="com.github.chenhao96.model.po.RoleUrl">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="urlName" property="urlName" jdbcType="VARCHAR"/>
        <result column="updateAt" property="updateAt" jdbcType="INTEGER"/>
        <result column="createAt" property="createAt" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
      id, urlName, url, updateAt, createAt
    </sql>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      delete from QPManagerPlatformDB.dbo.roleUrl where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insertSelective" parameterType="com.github.chenhao96.model.po.RoleUrl" useGeneratedKeys="true"
            keyProperty="id" keyColumn="id">
        insert into QPManagerPlatformDB.dbo.roleUrl
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="urlName != null">
                urlName,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="updateAt != null">
                updateAt,
            </if>
            <if test="createAt != null">
                createAt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="urlName != null">
                #{urlName,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=INTEGER},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.github.chenhao96.model.po.RoleUrl">
        update QPManagerPlatformDB.dbo.roleUrl
        <set>
            <if test="urlName != null">
                urlName = #{urlName,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="updateAt != null">
                updateAt = #{updateAt,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="urlList" resultMap="BaseResultMap">
        select id, urlName from QPManagerPlatformDB.dbo.roleUrl
    </select>

    <select id="countList" resultType="java.lang.Long" parameterType="com.github.chenhao96.model.bo.RoleUrlBo">
        select count(id) from QPManagerPlatformDB.dbo.roleUrl
        <where>
            <if test="urlName != null and urlName != ''">
                <choose>
                    <when test="like == true or like == 'true'">
                        and urlName like '%'+#{urlName,jdbcType=VARCHAR}+'%'
                    </when>
                    <otherwise>
                        and urlName = #{urlName,jdbcType=VARCHAR}
                    </otherwise>
                </choose>
            </if>
            <if test="url != null and url != ''">
                <choose>
                    <when test="like == true or like == 'true'">
                        and url like '%'+#{url,jdbcType=VARCHAR}+'%'
                    </when>
                    <otherwise>
                        and url = #{url,jdbcType=VARCHAR}
                    </otherwise>
                </choose>
            </if>
            <if test="updateAt != null and updateAt != ''">
                and updateAt = #{updateAt,jdbcType=INTEGER}
            </if>
            <if test="createAt != null and createAt != ''">
                and createAt = #{createAt,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <resultMap id="RoleUrlVoMap" type="com.github.chenhao96.model.vo.RoleUrlVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="urlName" property="urlName" jdbcType="VARCHAR"/>
        <result column="updateAtStr" property="updateAtStr" jdbcType="VARCHAR"/>
        <result column="createAtStr" property="createAtStr" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="pageList" parameterType="com.github.chenhao96.model.bo.RoleUrlBo" resultMap="RoleUrlVoMap">
        select id,url,urlName,updateAtStr,createAtStr from (select ROW_NUMBER() Over(order by url.id) as rowId,
        url.id, url.url, url.urlName, u.userName as updateAtStr, u2.userName as createAtStr
        from QPManagerPlatformDB.dbo.roleUrl url
        LEFT JOIN QPManagerPlatformDB.dbo.users u on u.id = url.updateAt
        LEFT JOIN QPManagerPlatformDB.dbo.users u2 on u2.id = url.createAt
        <where>
            <if test="urlName != null and urlName != ''">
                <choose>
                    <when test="like == true or like == 'true'">
                        and url.urlName like '%'+#{urlName,jdbcType=VARCHAR}+'%'
                    </when>
                    <otherwise>
                        and url.urlName = #{urlName,jdbcType=VARCHAR}
                    </otherwise>
                </choose>
            </if>
            <if test="url != null and url != ''">
                <choose>
                    <when test="like == true or like == 'true'">
                        and url.url like '%'+#{url,jdbcType=VARCHAR}+'%'
                    </when>
                    <otherwise>
                        and url.url = #{url,jdbcType=VARCHAR}
                    </otherwise>
                </choose>
            </if>
            <if test="updateAt != null and updateAt != ''">
                and url.updateAt = #{updateAt,jdbcType=INTEGER}
            </if>
            <if test="createAt != null and createAt != ''">
                and url.createAt = #{createAt,jdbcType=INTEGER}
            </if>
        </where>
        ) as tmp where rowId between #{page,jdbcType=INTEGER} and #{rows,jdbcType=INTEGER}
        <if test="sort != null and sort != '' and order != null and order != ''">
            order by ${sort} ${order}
        </if>
    </select>

    <delete id="batchDelete">
        DELETE from QPManagerPlatformDB.dbo.roleUrl where id in
        <foreach collection="array" item="urlId" index="index" open="(" close=")" separator=",">
            #{urlId,jdbcType=INTEGER}
        </foreach>
    </delete>
</mapper>