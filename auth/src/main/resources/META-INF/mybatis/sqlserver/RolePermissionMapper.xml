<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.chenhao96.dao.RolePermissionMapper">

    <resultMap id="BaseResultMap" type="com.github.chenhao96.model.po.RolePermission">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="roleName_id" property="roleNameId" jdbcType="INTEGER"/>
        <result column="roleUrl_id" property="roleUrlId" jdbcType="INTEGER"/>
        <result column="updateAt" property="updateAt" jdbcType="INTEGER"/>
        <result column="createAt" property="createAt" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
      id, roleName_id, roleUrl_id, updateAt, createAt
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from QPManagerPlatformDB.dbo.rolePermission
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="queryUrlsByUserId" resultType="java.lang.String" parameterType="java.lang.Integer">
        select r.url from QPManagerPlatformDB.dbo.rolePermission p
        left join QPManagerPlatformDB.dbo.users u on u.roleName_id = p.roleName_id
        left join QPManagerPlatformDB.dbo.roleUrl r on r.id = p.roleUrl_id
        where u.id = #{userID,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
      delete from QPManagerPlatformDB.dbo.rolePermission where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.github.chenhao96.model.po.RolePermission" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
    insert into QPManagerPlatformDB.dbo.rolePermission (roleName_id, roleUrl_id, updateAt, createAt)
    values ( #{roleNameId,jdbcType=INTEGER}, #{roleUrlId,jdbcType=INTEGER},
      #{updateAt,jdbcType=INTEGER}, #{createAt,jdbcType=INTEGER})
  </insert>

    <select id="countList" resultType="java.lang.Long" parameterType="com.github.chenhao96.model.bo.RolePermissionBo">
        select count(id) from QPManagerPlatformDB.dbo.rolePermission
        <where>
            <if test="roleNameId != null and roleNameId != ''">
                and roleName_id = #{roleNameId,jdbcType=INTEGER}
            </if>
            <if test="roleUrlId != null and roleNameId != ''">
                and roleUrl_id = #{roleUrlId,jdbcType=INTEGER}
            </if>
            <if test="updateAt != null and roleNameId != ''">
                and updateAt = #{updateAt,jdbcType=INTEGER}
            </if>
            <if test="createAt != null and roleNameId != ''">
                and createAt = #{createAt,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <resultMap id="RolePermissionVoMap" type="com.github.chenhao96.model.vo.RolePermissionVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="url" property="url" jdbcType="VARCHAR"/>
        <result column="urlName" property="urlName" jdbcType="VARCHAR"/>
        <result column="updateAtStr" property="updateAtStr" jdbcType="VARCHAR"/>
        <result column="createAtStr" property="createAtStr" jdbcType="VARCHAR"/>
        <result column="roleName" property="roleName" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="pageList" parameterType="com.github.chenhao96.model.bo.RolePermissionBo" resultMap="RolePermissionVoMap">
        select id,url,urlName,roleName,updateAtStr,createAtStr from (select ROW_NUMBER() Over(order by per.id) as rowId,
        per.id, ur.url, ur.urlName, r.roleName, u.userName as updateAtStr, u2.userName as createAtStr
        from QPManagerPlatformDB.dbo.rolePermission per
        LEFT JOIN QPManagerPlatformDB.dbo.roleName r on r.id = per.roleName_id
        LEFT JOIN QPManagerPlatformDB.dbo.roleUrl ur on ur.id = per.roleUrl_id
        LEFT JOIN QPManagerPlatformDB.dbo.users u on u.id = per.updateAt
        LEFT JOIN QPManagerPlatformDB.dbo.users u2 on u2.id = per.createAt
        <where>
            <if test="roleNameId != null and roleNameId != ''">
                and per.roleName_id = #{roleNameId,jdbcType=INTEGER}
            </if>
            <if test="roleUrlId != null and roleNameId != ''">
                and per.roleUrl_id = #{roleUrlId,jdbcType=INTEGER}
            </if>
            <if test="updateAt != null and roleNameId != ''">
                and per.updateAt = #{updateAt,jdbcType=INTEGER}
            </if>
            <if test="createAt != null and roleNameId != ''">
                and per.createAt = #{createAt,jdbcType=INTEGER}
            </if>
        </where>
        ) as tmp where rowId between #{page,jdbcType=INTEGER} and #{rows,jdbcType=INTEGER}
        <if test="sort != null and sort != '' and order != null and order != ''">
            order by ${sort} ${order}
        </if>
    </select>

    <delete id="batchDelete">
        DELETE FROM QPManagerPlatformDB.dbo.rolePermission WHERE id in
        <foreach collection="array" item="permissionId" index="index" open="(" close=")" separator=",">
            #{permissionId,jdbcType=INTEGER}
        </foreach>
    </delete>

    <delete id="batchDelete4RoleName">
        DELETE FROM QPManagerPlatformDB.dbo.rolePermission WHERE roleName_id in
        <foreach collection="list" item="roleName" index="index" open="(" close=")" separator=",">
            #{roleName,jdbcType=INTEGER}
        </foreach>
    </delete>

    <select id="queryExistPermissionId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select roleUrl_id from QPManagerPlatformDB.dbo.rolePermission where roleName_id = #{roleNameId,jdbcType=INTEGER}
    </select>
</mapper>